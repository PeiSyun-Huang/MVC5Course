@* 此處可使用 using ，亦可由 Views 內的 WebConfig 統一設定預設的命名空間 *@
@* @using MVC5Course.Models *@
@model IEnumerable<Client>
@using PagedList
@using PagedList.Mvc

@{
    if (IsAjax)
    {
        // 如果是 Ajax 呼叫，則不套用版面
        Layout = "";
    }
}

@{
    ViewBag.Title = "Index";
}

@{
    var data = Model as PagedList<Client>;
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")

    @*@Html.DropDownList("SelectGender", ViewBag.Genders as SelectList, "--請選擇--", new { onchange = "location.search = '?gender=' + $('#SelectGender').val() " })*@

    @* 這樣JS不好維護 *@
    @*@Html.DropDownList("Cities1", ViewBag.Cities as SelectList, "--請選擇--", new { onchange = "location.search = '?city=' + $('#Cities1').val() " })*@

    @*
    Cities > Cities1
    因為預設會先抓ViewBag.Cities，會導致無法取得預設選取值(因為是SelectList不是String)
    只要把名稱改成和ViewBag的屬性名稱不一樣即可
    *@
    @Html.DropDownList("Cities1", ViewBag.Cities as SelectList, "--請選擇--", new { onchange = "location.search = '?city=' + $('#Cities1').val() " })

    @* 將JS獨立出來，較好維護 *@
    <script>
        $(function () {
            // 用@Html 去抓ID
            $('#@(Html.Id("Cities1"))').change("change", function () {
                location.search = '?city=' + $(this).val();
            });
        });
    </script>

@* 表單查詢(已註解) *@
@*@using (Html.BeginForm()) {
    @Html.DropDownList("Gender", ViewBag.Genders as SelectList, "--請選擇--")
    @Html.TextBox("Name", "")

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Search" class="btn btn-default" />
        </div>
    </div>
    }*@



</p>

@* 此處使用 Ajax PagedList，如無第三參數，則為非 Ajax 分頁 *@
@* 使 PagedList 可取得 City 參數 *@
@Html.PagedListPager(data, page => Url.Action("Index", new { pageNo = page, city = ViewBag.City }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { UpdateTargetId = "Main", LoadingElementId = "loadingPagedList" }))

<div id="loadingPagedList" style="display:none">
    <img src="~/img/ajax-loader.gif">
</div>
<div>
    第 @(data.FirstItemOnPage) - @(data.LastItemOnPage) 筆(共 @(data.TotalItemCount) 筆)，共 @(data.PageCount) 頁
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MiddleName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateOfBirth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.CreditRating)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.XCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TelephoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Street1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Street2)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ZipCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Longitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Latitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Notes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Occupation.OccupationName)
        </th>*@
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MiddleName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Gender)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateOfBirth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.CreditRating)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.XCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TelephoneNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Street1)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Street2)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ZipCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Longitude)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Latitude)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Notes)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Occupation.OccupationName)
        </td>*@
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ClientId }) |
            @*@Html.ActionLink("Details", "Details", new { id=item.ClientId }) |*@

            @* 利用 Ajax 去取得 Detail 回來，並顯示於指定的ID內 *@
            @Ajax.ActionLink("Details", "Details", new { id = item.ClientId }, new AjaxOptions() { UpdateTargetId = "detail" + item.ClientId, LoadingElementId = "loading" + item.ClientId })

            @Html.ActionLink("Delete", "Delete", new { id=item.ClientId })
        </td>
    </tr>
    
    <tr>
        <td></td>
        <td colspan="10">
            <div id="loading@(item.ClientId)" style="display:none">
                <img src="~/img/ajax-loader.gif">
            </div>
            <div id="detail@(item.ClientId)">

            </div>
        </td>
    </tr>
}
</table>

