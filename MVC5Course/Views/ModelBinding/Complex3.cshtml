@model MVC5Course.Models.Simple1ViewModel

@{
    ViewBag.Title = "Complex3";
}

<h2>Complex3</h2>

@*
    因為要想辦法把表單的欄位名稱弄出 item.欄位名稱 ，因此宣告一個 item 把原本的 model.欄位名稱 改成 item.欄位名稱
*@

@{
    var item = new  MVC5Course.Models.Simple1ViewModel();
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Simple1ViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => item.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
