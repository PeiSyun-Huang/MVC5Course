@model IEnumerable<MVC5Course.Models.Client>
@using PagedList
@using PagedList.Mvc


@{
    ViewBag.Title = "Index";
}

@{
    if (IsAjax)
    {
        // 如果是 Ajax 呼叫，則不套用版面
        Layout = "";
    }
}

@{
    var data = Model as PagedList<MVC5Course.Models.Client>;
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
	@* 此處使用 Ajax PagedList，如無第三參數，則為非 Ajax 分頁 *@
@Html.PagedListPager(data, page => Url.Action("Index", new { pageNo = page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { UpdateTargetId = "Main", LoadingElementId = "loadingPagedList" }))
</p>
<div id="loadingPagedList" style="display:none">
    <img src="~/img/ajax-loader.gif">
</div>
<div>
    第 @(data.FirstItemOnPage) - @(data.LastItemOnPage) 筆(共 @(data.TotalItemCount) 筆)，共 @(data.PageCount) 頁
</div>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MiddleName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateOfBirth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreditRating)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.XCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TelephoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Street1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Street2)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ZipCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Longitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Latitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsDelete)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Occupation.OccupationName)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MiddleName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Gender)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateOfBirth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreditRating)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.XCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TelephoneNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Street1)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Street2)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ZipCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Longitude)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Latitude)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsDelete)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Occupation.OccupationName)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ClientId }) |
            @Html.ActionLink("Details", "Details", new { id=item.ClientId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ClientId })
        </td>
    </tr>
}

</table>
